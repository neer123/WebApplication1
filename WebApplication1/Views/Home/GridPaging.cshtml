@model IEnumerable<WebApplication1.Models.Employee>

@using NonFactors.Mvc.Grid
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>GridPaging</title>
    <link href="~/Content/Bootstrap/bootstrap.css" rel="stylesheet" />
    <link href="~/MVCGridItems/mvc-grid.css" rel="stylesheet" />
    <link href="~/Content/Shared/base.css" rel="stylesheet" />
    @*<link href="~/Content/FontAwesome/font-awesome.css" rel="stylesheet" />
        <link href="~/Content/MvcGrid/mvc-grid.css" rel="stylesheet" />
        <link href="~/Content/Shared/base.css" rel="stylesheet" />*@


</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="widget example col">
                <div class="widget-header">
                    <div class="fa fa-bars"></div>
                    <span>Pager with rows per page selection</span>
                </div>
                <div class="widget-content">
                    @(Html.Grid(Model).Build(c =>
                    {
                        c.Add(m => m.Name).Encoded(false).RenderedAs(model => model.Name != "Test1" ? "<span style='color: #CC4444'>" + model.Name + "</span>" : model.Name).Titled("Name");
                        c.Add(s => s.Address).Titled("Address");
                        c.Add(s => s.CompanyName).Titled("Company Name");
                        c.Add(s => s.Designation).Titled("Designation");
                        c.Add(s => s.Salary).Titled("Salary");
                        c.Add(s => s.MobileNo).Titled("MobileNo");
                    })
                  .Pageable(pager =>
                {
                    pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 2, "2" }, { 4, "4" } };
                pager.ShowPageSizes = true;
                pager.PagesToDisplay =  ViewBag.TP;
                pager.CurrentPage = 1;
                pager.RowsPerPage = 3;

                })
                    )
                </div>

              
            </div>

          

        </div>

    </div>
    <div>
        @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
        <a asp-action="Index">Back to List</a>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    @*<script src="../Scripts/Shared/site.js"></script>
        <script src="../Scripts/MvcGrid/mvc-grid.js"></script>
        <script src="~/Scripts/MvcGrid/Cultures/mvc-grid.culture.fr.js"></script>*@

    <script src="~/MVCGridItems/mvc-grid.js"></script>
    <script src="~/Scripts/Shared/site.js"></script>

    @*<script src="../Scripts/MvcGrid/mvc-grid.js"></script>*@

    @*<script>$('.mvc-grid').mvcgrid();</script>*@
</body>
</html>
